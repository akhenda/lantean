import { ReactNode } from 'react';
import { ColorSchemeName, useColorScheme, View, ViewProps } from 'react-native';
import { OverlayProvider } from '@gluestack-ui/overlay';
import { ToastProvider } from '@gluestack-ui/toast';
import { colorScheme as colorSchemeNW } from 'nativewind';

import { config, ModeType } from './config';

const getColorSchemeName = (
  colorScheme: ColorSchemeName,
  mode: ModeType,
): 'light' | 'dark' => {
  if (mode === 'system') return colorScheme ?? 'light';

  return mode;
};

export function GluestackUIProvider({
  mode = 'light',
  children,
  style,
}: {
  mode?: ModeType;
  children?: ReactNode;
  style?: ViewProps['style'];
}) {
  const colorScheme = useColorScheme();
  const colorSchemeName = getColorSchemeName(colorScheme, mode);

  colorSchemeNW.set(mode);

  return (
    <View
      style={[
        config[colorSchemeName],
        { flex: 1, height: '100%', width: '100%' },
        style,
      ]}
    >
      <OverlayProvider>
        <ToastProvider>{children}</ToastProvider>
      </OverlayProvider>
    </View>
  );
}
